spring.application.name=currency-exchange
server.port=8000

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true

# This tells spring to execute data.sql queries after tables are created
spring.jpa.defer-datasource-initialization=true

# Optional - This is the URL (default) that this service will use to register with eureka server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# max retry attempts in case of request failure
resilience4j.retry.instances.sample-api.max-attempts=5

# duration between subsequent requests while retrying
resilience4j.retry.instances.sample-api.wait-duration=1s

# duration grow exponentially between subsequent requests while retrying like 1s,2s,4s,8s....
resilience4j.retry.instances.sample-api.enable-exponential-backoff=true

# if 90% of requests fail then circuit breaker enters into open state
# resilience4j.circuitbreaker.instances.default.failure-rate-threshold=90

# allows only 2 requests in every 10 sec otherwise throw an exception
resilience4j.ratelimiter.instances.default.limit-for-period=2
resilience4j.ratelimiter.instances.default.limit-refresh-period=10s

# allows only upto 10 concurrent calls for sample-api service
resilience4j.bulkhead.instances.sample-api.max-concurrent-calls=10
